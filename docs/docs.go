// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/patient": {
            "delete": {
                "description": "Delete patient",
                "tags": [
                    "Patient"
                ],
                "summary": "Delete patient by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "patient id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/patients": {
            "put": {
                "description": "Update patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "Update patient by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "patient id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Create patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "Create patient",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/patients/:id": {
            "get": {
                "description": "Get patient",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "Get patient by Id",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/patients/GetAll": {
            "get": {
                "description": "Get All patients",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Patient"
                ],
                "summary": "Get all patients",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/turns": {
            "get": {
                "description": "Get turn",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Turn"
                ],
                "summary": "Get turn by DNI",
                "parameters": [
                    {
                        "description": "patient dni",
                        "name": "dni",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Update turn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Turn"
                ],
                "summary": "Update turn by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "turn id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Create turn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Turn"
                ],
                "summary": "Create turn",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete turn",
                "tags": [
                    "Turn"
                ],
                "summary": "Delete turn by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "turn id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Update turn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Turn"
                ],
                "summary": "Update turn by fields",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "turn id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/turns/:id": {
            "get": {
                "description": "Get turn",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Turn"
                ],
                "summary": "Get turn by id",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "PI Reserva Turnos",
	Description:      "This API Handle Products",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
